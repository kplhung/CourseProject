<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE nitf SYSTEM "http://www.nitf.org/IPTC/NITF/3.3/specification/dtd/nitf-3-3.dtd">
<nitf change.date="June 10, 2005" change.time="19:30" version="-//IPTC//DTD NITF 3.3//EN">
  <head>
    <title>Putting a Darwinian Spin on the Diesel Engine</title>
    <meta content="19DESI$07" name="slug"/>
    <meta content="19" name="publication_day_of_month"/>
    <meta content="9" name="publication_month"/>
    <meta content="2000" name="publication_year"/>
    <meta content="Tuesday" name="publication_day_of_week"/>
    <meta content="Science Desk" name="dsk"/>
    <meta content="3" name="print_page_number"/>
    <meta content="F" name="print_section"/>
    <meta content="1" name="print_column"/>
    <meta content="Technology; Science; Health" name="online_sections"/>
    <meta content="http://www.nytimes.com/2000/09/19/science/19DESI.html" name="alternate_url"/>
    <docdata>
      <doc-id id-string="1231756"/>
      <doc.copyright holder="The New York Times" year="2000"/>
      <identified-content>
        <classifier class="indexing_service" type="descriptor">Diesel Power</classifier>
        <classifier class="indexing_service" type="descriptor">Computers and the Internet</classifier>
        <org class="indexing_service">University of Wisconsin</org>
        <person class="indexing_service">Schechter, Bruce</person>
        <classifier class="online_producer" type="taxonomic_classifier">Top/News</classifier>
        <classifier class="online_producer" type="taxonomic_classifier">Top/News/U.S./Midwest</classifier>
        <classifier class="online_producer" type="taxonomic_classifier">Top/News/Science</classifier>
        <classifier class="online_producer" type="taxonomic_classifier">Top/News/Health</classifier>
        <classifier class="online_producer" type="taxonomic_classifier">Top/News/Technology</classifier>
        <classifier class="online_producer" type="taxonomic_classifier">Top/Classifieds/Job Market/Job Categories/Technology, Telecommunications and Internet</classifier>
        <classifier class="online_producer" type="general_descriptor">Computers and the Internet</classifier>
        <classifier class="online_producer" type="general_descriptor">Energy and Power</classifier>
      </identified-content>
    </docdata>
    <pubdata date.publication="20000919T000000" ex-ref="http://query.nytimes.com/gst/fullpage.html?res=9C01E7DD173BF93AA2575AC0A9669C8B63" item-length="1687" name="The New York Times" unit-of-measure="word"/>
  </head>
  <body>
    <body.head>
      <hedline>
        <hl1>Putting a Darwinian Spin on the Diesel Engine</hl1>
      </hedline>
      <byline class="print_byline">By BRUCE SCHECHTER</byline>
      <byline class="normalized_byline">Schechter, Bruce</byline>
      <abstract>
        <p>Scientists at University of Wisconsin apply computerized version of Darwinian natural selection to design a better diesel engine; photos (M)</p>
      </abstract>
    </body.head>
    <body.content>
      <block class="lead_paragraph">
        <p>To engineers, the silent machinery of a living cell is a humbling reminder of the crudeness of their own designs. Every cell is a tiny, elegant engine that converts chemical fuel to energy while emitting innocuous byproducts. By contrast, a diesel engine, the most efficient type of internal combustion engine, is a monument to waste.</p>
        <p>So engineers have begun to imitate nature, by letting a computerized version of Darwinian natural selection guide their design processes. In this approach, known as genetic algorithms, a computer simulates the performance of a group of machines, each with a slightly different design. These machines compete against one another and, just as in evolution, the best performing, or fittest, survives, to serve as the basis for another generation of designs. This process is repeated until an evolutionary winner, whose performance is maximized, emerges.</p>
      </block>
      <block class="full_text">
        <p>To engineers, the silent machinery of a living cell is a humbling reminder of the crudeness of their own designs. Every cell is a tiny, elegant engine that converts chemical fuel to energy while emitting innocuous byproducts. By contrast, a diesel engine, the most efficient type of internal combustion engine, is a monument to waste.</p>
        <p>So engineers have begun to imitate nature, by letting a computerized version of Darwinian natural selection guide their design processes. In this approach, known as genetic algorithms, a computer simulates the performance of a group of machines, each with a slightly different design. These machines compete against one another and, just as in evolution, the best performing, or fittest, survives, to serve as the basis for another generation of designs. This process is repeated until an evolutionary winner, whose performance is maximized, emerges.</p>
        <p>Scientists at the University of Wisconsin have recently applied this approach to the design of a diesel engine that, while far from the biological ideal, is more efficient and produces less waste than others in its class.</p>
        <p>Recently genetic algorithms have been used in a wide variety of fields as diverse as creating artistic masterpieces, playing expert checkers and designing robots. But, Dr. Peter Senecal, a postdoctoral student at the university, said, ''This is the first application of genetic algorithms to engine design.''</p>
        <p>Despite numerous refinements, the modern diesel engine is remarkably similar to the 1893 prototype by Rudolf Diesel. A French-born engineer, Diesel made his engine, using the newly discovered principles of thermodynamics, as a replacement of the gasoline engine, then in its infancy and extremely inefficient.</p>
        <p>In a gasoline engine, a mixture of air and gas is injected into the engine's cylinder and then compressed by the piston. The mixture, ignited by a spark from the spark plug, explodes, and this explosive energy drives the piston and eventually makes the wheels turn round.</p>
        <p>The efficiency of a gas engine is limited by (among other things) the compression ratio, the amount that the fuel-air mixture is compressed by the cylinder: the more compression the more efficient the engine. But when a gas is compressed it grows hotter and this heating can prematurely ignite the fuel-air mixture, causing a phenomenon known as knocking.</p>
        <p>But in a diesel engine, this heating is put to good use. The cylinder of a diesel engine is filled with only air, which is compressed to as much as 500 pounds a square inch, causing its temperature to rise to 1,000 degrees.  Then, a tiny bit of fuel is injected into the combustion chamber, where the compressed, heated air causes it to explode without a spark plug. The result is an engine more efficient than one that runs on gasoline, but also one more complex because it requires machinery for compressing and injecting the fuel.</p>
        <p>Refining the diesel engine has been a major project of engineers, arousing the interest of vast research laboratories and garage tinkerers alike. Their efforts have allowed diesel engines to evolve from hulking behemoths appropriate only in mines, factories and power plants to engines suitable for automobiles. Still, said Dr. Rolf D. Reiz, a professor of mechanical engineering at the University of Wisconsin, ''For the first 80 years of diesel history, design has all been done by trial and error.''</p>
        <p>Over the past two decades, with the advent of high-speed computing,  this has begun to change, but slowly, because the problem is so difficult. To understand how a diesel engine works in detail requires more than a knowledge of piston and valve; the physics of fuel injection, exactly how fuel breaks into a mist and swirls around a cylinder, must be considered; every detail of physics and chemistry of the exploding, turbulent fireball of fuel must be tracked.</p>
        <p>It's the kind of problem that chokes even the most powerful supercomputers. But over the last few years, computers running software developed by Dr. Reiz and his colleagues at government laboratories, universities and in industry have begun to make progress, though the progress is slow.</p>
        <p>''A typical simulation will run for several days on a supercomputer,'' Dr. Reiz said. That simulation is of one engine cycle, which actually takes place in less than a tenth of a second. ''We're much slower than real-time. It's kind of like the early days of weather prediction where you'd be predicting the weather that occurred three weeks ago. We're in that realm, but nevertheless we can use the tools to do things that cannot be done in the laboratory.''</p>
        <p>The computer simulation can be used to show the effects of varying any of the parameters of the engine's design: the timing of the fuel injection, how much fuel is injected, at what pressure and so on. There can be dozens of parameters to adjust, each of which affects the others. Finding an optimal combination by trial and error on a real-world engine could take practically forever. But, with simulations taking two days apiece, trying all the combinations of variables with a computer does not seem to work much faster.</p>
        <p>After searching the mathematical literature, Dr. Senecal, a student of Dr. Reiz, found a better way to speed up the evolution of designs by borrowing genetic principles.</p>
        <p>The problem of how to optimize a process based on many parameters can be likened to locating the peak of a mountain range. One approach is to start somewhere and keep walking up. Eventually the walker will reach a point where he can walk up no further, and this is a peak. But is this the highest peak?</p>
        <p>Evolution confronts this problem in its search for an optimal combination of genes for survival. Mutating genes can be thought of as tweaking parameters. Somehow evolution manages to find a way of conquering mountains while not planting its flag on insignificant peaks. It does so by sending out not just one explorer but a veritable army.</p>
        <p>By randomly mutating genes, evolution scatters a group of explorers across the so-called fitness landscape. The ones that find the highest ground, and are thus the fittest, survive and share their genes. Their offspring will then explore an area of the mountain closer to the place their parents landed, and perhaps discover even higher ground corresponding to even greater fitness.</p>
        <p>The basic idea of genetic algorithms is that entire classes of designs, strategies or artworks can be written down as depending upon a set of parameters. In the case of engine design, Dr. Senecal chose to make these parameters correspond to elements like injection timing, pressure and other operating variables. These parameters are, in effect, the genes of the engine and the computer starts by generating a random set of these genes.</p>
        <p>The engines bearing these ''genes'' are simulated and the results are compared. Dr. Senecal rated the fitness of his engines on their fuel efficiency and the amount of soot and nitrate wastes they generated. The best of these designs are mated together by swapping genes in a way inspired by nature, and the process is repeated.</p>
        <p>Ordinarily, genetic algorithms require hundreds of ''organisms'' to be evaluated each generation, but given how time-consuming it is to simulate a diesel engine cycle, Dr. Senecal needed a better technique. He discovered in the literature an approach called microgenetic algorithms, a refinement that allowed him to consider generations of just five organisms. Still, using a Silicon Graphics Origin 2000 supercomputer with 32 processors it took more than two weeks of continuous operation to find an optimal set of parameters.</p>
        <p>The effort was worthwhile; Dr. Senecal's test engine consumed 15 percent less fuel than a standard engine while producing one-third as much nitric oxide and half the soot.</p>
        <p>These results go beyond theoretical. To make sure their simulation corresponds to reality, the Wisconsin scientists have simulated a Caterpillar truck engine used to power real-world machinery. By tweaking the parameters of this real-world engine they confirmed their computer prediction, and that confirmation is of great interest to engine designers.</p>
        <p>''What we can now do,'' Dr. Reiz said, ''is indicate to engine designers those variables that are most important or ones that might have been overlooked had it not been for the computer identifying it.'' In particular, these studies have highlighted the importance of injecting the fuel into the cylinder in tiny bursts instead of in a single pulse. Doing so increases the surface area of the fuel, which leads to cleaner and more efficient burning.</p>
        <p>So far the Wisconsin engineers have focused only on tweaking parameters while keeping the overall engine design constant. The next stage will involve having the computer vary the engine shape, particularly in the curve of the cylinder head.</p>
        <p>''If you look at the shape of the piston in the truck engines you see it really hasn't changed much in the last 40 years,'' Dr. Reiz said. Meanwhile, the fuel injection system has changed radically.</p>
        <p>''In the old days injectors used to operate at 2,000 pounds per square inch,'' he added. ''Now we're talking about 20,000 pounds per square inch. So it stands to reason that an engine design that might have been useful for 2,000 pounds per square inch may not be useful for 20,000 pounds per square inch.''</p>
        <p>Nobody has tinkered with the design because tinkering would involve creating a design, having a new piston made, and running it in the laboratory without much guidance from theory, and doing it over and over again. Rather than confront this expensive and frustrating process, designers have left the piston alone.</p>
        <p>Now, Dr. Reiz said, ''We can do all this on the computer without even having to cut metal.'' The result of this application of genetic algorithms could mean, in a few years, a revolution in the diesel engine.</p>
      </block>
    </body.content>
  </body>
</nitf>
